DROP TABLE IF EXISTS products, users, orders, orderItems;

CREATE TABLE IF NOT EXISTS Products(
    product_id SERIAL PRIMARY KEY,   
    name VARCHAR(25) NOT NULL,                          
    description TEXT,                                   
    price DECIMAL(10, 2) NOT NULL,                       
    category VARCHAR(50)                                
);

CREATE TABLE IF NOT EXISTS Customers (
    customer_id SERIAL PRIMARY KEY,  
    name VARCHAR(25) NOT NULL,                          
    email VARCHAR(25) UNIQUE NOT NULL,                 
    phone_number VARCHAR(15),                           
    address VARCHAR(55)                                 
);

CREATE TABLE IF NOT EXISTS Orders (
    order_id SERIAL PRIMARY KEY,     
    customer_id INT REFERENCES Customers(customer_id) ON DELETE CASCADE,                                     
    order_date DATE NOT NULL,                            
    status TEXT DEFAULT 'Pending' CHECK (status IN ('Pending', 'Completed', 'Cancelled')) 
); 

CREATE TABLE IF NOT EXISTS Payments (
    payment_id SERIAL PRIMARY KEY, 
    order_id INT REFERENCES Orders(order_id) ON DELETE CASCADE,                                         
    payment_date DATE NOT NULL,                         
    amount DECIMAL(10, 2) NOT NULL,                       
    payment_status TEXT DEFAULT 'Unpaid' CHECK (payment_status IN ('Paid', 'Unpaid'))
);

CREATE TABLE IF NOT EXISTS Inventory (
    inventory_id SERIAL PRIMARY KEY, 
    product_id INT REFERENCES Products(product_id) ON DELETE CASCADE,                                      
    stock_quantity INT DEFAULT 0,                         
    last_updated DATE DEFAULT CURRENT_DATE            
);